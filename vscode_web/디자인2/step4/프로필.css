* {
  /* 
    우리가 패딩을 줬을 때 높이와 너비가 그 패딩을 포함했을 때도
    동일한 높이와 너비가 되도록 border-box로 준다
    */
  box-sizing: border-box; /* 1 */
}

body {
  font-family: "Open Sans", sans-serif;
  margin: 0; /* 2 외부 여백을 0으로 */
  cursor: default;
}

a {
  text-decoration: none; /* 3  a태그 밑줄제거 */
  color: #eae7b1; /* 4 글자색 변경 */
}

ul {
  list-style: none; /* 5 li태그 구슬 제거 */
  padding-left: 0; /* 6 */
}
/* 선택자가 id이면 #을 붙임 */
/* Navbar 
  navbar는 ID선택자로 되어 있기 때문에  navbar에게 야 너 안에 박스 두 개 있는데 
  우리 플렉스 박스로 하자 그래서 박스가 양쪽에 나올 수 있도록 
  그리고 지금 중심 축은 수평 축이죠 중심축에서 정렬할 수 있는 것은 justify-content니까
  space-between을 이용해서 간격이 떨어져 있도록 만든다
*/
#navbar {
  position: fixed; /* 13 */
  width: 100%; /* 12 */
  align-items: center; /* 10 */
  display: flex; /* 7 */
  padding: 16px; /* 11 */
  justify-content: space-between; /* 9 */
  background-color: #3c6255; /* 8 */
  color: #eae7b1; /* 8-1 */
}

.navbar-logo {
  font-size: 28px; /* 14 */
  font-weight: 600; /* 15 */
}

.navbar-menu {
  display: flex; /* 16 li 가로정렬하기 */
}

.navbar-menu-item {
  padding: 8px 12px; /* 20 내부여백 */
  margin: 0 4px; /* 19 외부여백 */
  cursor: pointer; /* 17 커서손모양 */
  border-radius: 4px; /* 18 */
}

.navbar-menu-item.active {
  border: 1px solid #eae7b1;
}

.navbar-menu-item:hover {
  background-color: #eae7b1; /* 19 */
  color: #3c6255; /* 20 */
}

/* Section common */
section {
  padding: 50px;
  text-align: center;
  max-width: 1200px;
  margin: auto;
}

/*  intro  */
#intro {
  background: url("../../images/도서-1.jpg") center/cover no-repeat; /* 반응형이 되도록 해줌 */
  padding: 40px;
  text-align: center;
}

.intro__avatar {
  width: 250px;
  height: 250px;
  border-radius: 50%;
  border: 2px solid #eeeeee;
}

.intro__title,
.intro__description {
  color: #4d4d4d;
}

.intro__contact {
  color: #eae7b1;
  background-color: #3c6255;
  font-size: 18px;
  font-weight: 700px;
  margin: 24px;
  padding: 8px 12px;
  border: 2px solid #eeeeee;
  border-radius: 6px;
  cursor: pointer;
}

/* About */
.about__majors {
  display: flex;
  justify-content: space-between;
  margin: 80px 0;
}

.major__icon {
  width: 170px;
  height: 170px;
  line-height: 170px;
  font-size: 70px;
  margin: auto;
  border: 1px solid #61876e;
  border-radius: 50%;
  margin-bottom: 16px;
  color: #3c6255;
  /* background-color: yellow; 안보이니까 배경색 넣고 작업하면 좋아*/
}

.major__icon i {
  transition: all var(--animation-duration) ease;
}

.major__icon:hover i {
  color: #61876e;
  transform: rotate(-30deg) scale(1.1);
}

.major__title,
.major__description {
  color: #4d4d4d;
}

.major__description {
  font-size: 16px;
}

.school {
  display: flex;
  align-items: center;
}

.school__description {
  margin: 0 16px;
  text-align: left;
}

.school__name,
.school__period {
  color: #7c7979;
}

.school__name {
  font-size: 16px;
}

.school__period {
  font-size: 14px;
}

/* Skill */
#skills {
  background-color: #fff7d1;
}
/* 
우리가 스킬셋이라는 컨테이너박스를 디스플레이로 만들어 볼게요 그러면 벌써 이렇게 양옆으로 정렬됨
아이템들이 크기가 자동적으로 늘어나게 만들기 위해서는 아이템별로 우리가 flex-basis 를 지정해 줌
*/
.skillset {
  display: flex; /* skills와 Tools가 두 줄로 보임 */
  background-color: #7c7979;
  color: #eeeeee;
  margin: 20px 0;
}

.skillset__title {
  color: white;
}

.skillset__left {
  flex-basis: 60%;
  background-color: #4d4d4d;
  padding: 20px 40px; /* 위아래 20와  양옆 40에 패딩 추가됨 */
}

.skill {
  margin-bottom: 32px;
}

.skill__description {
  display: flex; /* Skills의 목록이 왼쪽으로 밀착됨 */
  justify-content: space-between;
}

.skill__bar {
  width: 100%;
  height: 3px;
  background-color: #616161;
}
/* 
문제제기:모든 요소에 다 70%로 값이 할당되는게 보이죠 50으로 해도 다 똑같은 값이 적용됨
그래서 이 width는 css에서 정리하는 것이 아니라 html 태그에서 정의 되어져야 함
그리고 나중에 이런 데이터들은 따로 추출해서 제이슨에서 관리하고 제이슨에서 동적으로 
받아오고 이런 데이터를 html코드로 변환해서 자동적으로 생성을 할 거기 때문에 
html에 적용이 되어 있어야 해요
우리가 할 수 있는 방법은 태그에 스타일을 인라인화 하는 겁니다.
 */
.skill__value {
  /* width: 70%; */
  height: 3px;
  background-color: #feb546;
}

.skillset__right {
  flex-basis: 40%;
}

.tools {
  background-color: #616161;
}

.tools,
.etc {
  padding: 20px;
}
